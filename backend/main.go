package main

import (
	"net/http" // Keep for http.StatusOK

	"github.com/gin-contrib/cors" // Import the cors middleware
	"github.com/gin-gonic/gin"

	docs "requestor-tools-backend/docs" // docs is generated by Swag CLI

	"requestor-tools-backend/handlers" // Import the new handlers package

	swaggerFiles "github.com/swaggo/files"     // swagger embed files
	ginSwagger "github.com/swaggo/gin-swagger" // gin-swagger middleware_
)

// @title Requestor Tools API
// @version 1.0
// @description This is the API for the Requestor Tools backend.
// @termsOfService http://swagger.io/terms/

// @contact.name API Support
// @contact.url https://www.example.com/support
// @contact.email support@example.com

// @license.name Apache 2.0
// @license.url http://www.apache.org/licenses/LICENSE-2.0.html

// @host localhost:8080
// @BasePath /
// @schemes http
func main() {
	router := gin.Default()
	docs.SwaggerInfo.BasePath = "/api/v1"

	// Load HTML templates. Gin will look for templates in the specified path.
	// The name of the template in c.HTML will be the filename, e.g., "template.html".
	router.LoadHTMLFiles("templates/template.html")

	// 1. Use the CORS middleware.
	router.Use(cors.Default())

	// 3. Define a GET route for the root path '/'.
	// @Summary Show welcome message
	// @Description Get a welcome message for the API
	// @Produce      json
	// @Success      200 {object} handlers.Message
	// @Router / [get]
	router.GET("/", func(c *gin.Context) {
		welcomeMsg := handlers.Message{Text: "Welcome to the Requestor Tools API!"}
		c.JSON(http.StatusOK, welcomeMsg)
	})

	v1 := router.Group("/api/v1")
	{
		eg := v1.Group("")
		{
			eg.GET("/greet", handlers.Greet) // Use handler from the handlers package
		}
	}
	router.GET("/swagger-ui/*any", ginSwagger.WrapHandler(swaggerFiles.Handler))
	router.GET("/page/start", handlers.PageStart) // Use handler from the handlers package

	// 4. Start the server.
	router.Run(":8080")
}
