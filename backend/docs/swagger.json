{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is the API for the Requestor Tools backend.",
        "title": "Requestor Tools API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "https://www.example.com/support",
            "email": "support@example.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/aaa": {
            "post": {
                "description": "Receives AAA settings and an authorization token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Process AAA settings",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Settings to process",
                        "name": "settings",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.AAASettingsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully processed settings",
                        "schema": {
                            "$ref": "#/definitions/handlers.AAAResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input",
                        "schema": {
                            "$ref": "#/definitions/handlers.AAAResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Missing Authorization header",
                        "schema": {
                            "$ref": "#/definitions/handlers.AAAResponse"
                        }
                    }
                }
            }
        },
        "/greet": {
            "get": {
                "description": "Get a greeting message from the backend",
                "produces": [
                    "application/json"
                ],
                "summary": "Greet the user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.Message"
                        }
                    }
                }
            }
        },
        "/jwt": {
            "post": {
                "description": "Receives a JWT token in the body, decodes it, and returns the claims.\nNote: This endpoint uses ParseUnverified for simplicity to show claims. For production, you MUST validate the token's signature and claims (e.g., 'exp', 'iss', 'aud').",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Process JWT",
                "parameters": [
                    {
                        "description": "JWT Token to process",
                        "name": "token_payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.JWTRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully decoded JWT with claims",
                        "schema": {
                            "$ref": "#/definitions/handlers.JWTResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input (e.g., missing token, malformed JSON)",
                        "schema": {
                            "$ref": "#/definitions/handlers.JWTResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Invalid JWT (e.g., parsing error, failed to extract claims)",
                        "schema": {
                            "$ref": "#/definitions/handlers.JWTResponse"
                        }
                    }
                }
            }
        },
        "/page/start": {
            "get": {
                "description": "Renders a dynamic HTML start page.",
                "produces": [
                    "text/html"
                ],
                "summary": "Start Page",
                "responses": {
                    "200": {
                        "description": "HTML content of the start page",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.AAAResponse": {
            "type": "object",
            "properties": {
                "names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "handlers.AAASettingsRequest": {
            "type": "object",
            "required": [
                "settingName"
            ],
            "properties": {
                "settingName": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "handlers.JWTRequest": {
            "type": "object",
            "required": [
                "token"
            ],
            "properties": {
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                }
            }
        },
        "handlers.JWTResponse": {
            "type": "object",
            "properties": {
                "claims": {
                    "type": "object",
                    "additionalProperties": true
                },
                "text": {
                    "description": "For general messages or errors",
                    "type": "string"
                }
            }
        },
        "handlers.Message": {
            "type": "object",
            "properties": {
                "text": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}